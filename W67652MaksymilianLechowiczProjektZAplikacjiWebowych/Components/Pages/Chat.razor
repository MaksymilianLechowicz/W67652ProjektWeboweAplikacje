@page "/chat"
@rendermode InteractiveServer
@using GroqApiLibrary;
@using System.Text.Json.Nodes;
@inject W67652MaksymilianLechowiczProjektZAplikacjiWebowych.Services.ICrossService CrossService

<PageTitle>AI assistant</PageTitle>
<h3>Chat</h3>

@foreach (var message in messages)
{
    @if (message.IsUsersMessage)
    {
        <strong>User</strong>
        <div class="alert alert-primary">@message.Message</div>
    }
    else{
        <strong>Chat</strong>
        <div class="alert alert-secondary">@message.Message</div>
    }
}

<input type="number" class="form-control" placeholder="Select number of a plant you wish to obtain info about" @bind="newMessage" />
<button class="btn btn-primary"type="button" @onclick="AskChat">Ask chat</button>

@code{
    private List<ChatMessage> messages = new();

    private string? newMessage;
    private string? newPrompt;
    private string? imageUrl;
    //private string? answerWithImage;
    private string? answer;

    private static string apiKey = "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";
    private GroqApiClient groqApi = new GroqApiClient(apiKey);

    private async Task AskChat()
    {

        newPrompt = newMessage;
        var result3 = await CrossService.GetPlant(Int32.Parse(newMessage));
        if(messages != null)
        {

            newPrompt = "What plant is" + result3.PlantName + "and what color is it";
        }
    var request = new JsonObject
    {
        ["model"] = "llama-3.2-11b-vision-preview",
        ["messages"] = new JsonArray
        {
            new JsonObject
            {
                ["role"] = "user",
                ["content"] = newPrompt
            }
        }
    };

    var result = await groqApi.CreateChatCompletionAsync(request);
    answer = result?["choices"]?[0]?["message"]?["content"]?.ToString();

    messages.Add(new ChatMessage {Message = newMessage, IsUsersMessage = true});
    messages.Add(new ChatMessage {Message = answer, IsUsersMessage = false});
    newMessage = String.Empty;
    StateHasChanged();
  }


}

